---
- name: DevOps AWS Exercise for - DevOps Support Escalation
  hosts: localhost
  connection: local
  tasks:
  - name: remove key pair by name
    amazon.aws.ec2_key:
      name: devops_aws_exercise
      region: us-east-2
      state: absent

  - name: Create a new EC2 key
    amazon.aws.ec2_key:
       name: devops_aws_exercise
       region: us-east-2
    register: ec2_key_result

  - name: Save private key
    copy: content="{{ ec2_key_result.key.private_key }}" dest="./devops_aws_exercise.pem" mode=0600
    when: ec2_key_result.changed
    
  - name: example using security group rule descriptions
    amazon.aws.ec2_group:
       name: devops-aws-exercise
       description: sg with rule descriptions
       region: us-east-2
       rules:
         - proto: tcp
           ports:
           - 22
           cidr_ip: 0.0.0.0/0
           rule_desc: allow all on port 22
           
  - name: Create EC2 instance
    register: ec2
    amazon.aws.ec2:
      instance_type: "{{ instance_size }}"
      key_name: devops_aws_exercise
      image: ami-0a0ad6b70e61be944
      region: us-east-2
      group: devops-aws-exercise
      count: 1
      wait: yes
      instance_tags:
         Name: "{{ instance_name }}"
  
  - name: Add newly create instance to a host group
    add_host:
      hostname: "{{ item.public_ip }}"
      groupname: launched
    loop: "{{ ec2.instances }}"
    
  - name: Wait for newly created EC2 instance to come up
    delegate_to: "{{ item.public_dns_name }}"
    wait_for_connection:
      delay: 60
      timeout: 320
    loop: "{{ ec2.instances }}"
 
- name: Copy file to newly created EC2 instance to /tmp
  hosts: launched
  gather_facts: True
  tasks:
  - name : copy files
    become: yes
    remote_user: ec2-user
    become_method: sudo
    become_user: root
    copy:
      src: "{{ upload_file }}"
      dest: "/tmp/"
      owner: ec2-user
      mode: u=rw,g=r,o=r
